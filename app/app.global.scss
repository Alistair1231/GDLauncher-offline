/*
 * @NOTE: Prepend a `~` to css file paths that are in your node_modules
 *        See https://github.com/webpack-contrib/sass-loader#imports
 */
@import './antd.css';
@import './style/theme/index';

@font-face {
  font-family: 'GlacialIndifferenceBold';
  src: url('./assets/fonts/GlacialIndifferenceBold.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'GlacialIndifferenceItalic';
  src: url('./assets/fonts/GlacialIndifferenceItalic.otf') format('opentype');
  font-weight: normal;
  font-style: italic;
}

@font-face {
  font-family: 'GlacialIndifferenceMedium';
  src: url('./assets/fonts/GlacialIndifferenceMedium.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'GlacialIndifferenceRegular';
  src: url('./assets/fonts/GlacialIndifferenceRegular.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

html,
body {
  font-family: 'GlacialIndifferenceRegular', sans-serif;
  padding: 0;
  margin: 0;
  overflow: hidden;
}

a {
  -webkit-user-drag: none;
}

::-webkit-scrollbar {
  background-color: var(--secondary-color-3);
  width: 8px;
  border-radius: 8px;
}

::-webkit-scrollbar-thumb {
  background-color: $text-main-color;
  border-radius: 8px;
}

::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px var(--secondary-color-3);
  background-color: var(--secondary-color-3);
  border-radius: 8px;
}

:not(input):not(textarea):not(button):not(span):not(div):not(a):not(i):not(span),
:not(input):not(textarea):not(button):not(span):not(div):not(a):not(i):not(span)::after,
:not(input):not(textarea):not(button):not(span):not(div):not(a):not(i):not(span)::before {
  -webkit-user-select: none;
  user-select: none;
  cursor: default;
}

input,
button,
textarea,
:focus {
  outline: none;
}

a:hover {
  text-decoration: underline;
}

.slick-dots {
  margin-top: -150px;
}

/*
 * Had to remove scale animation because of how the menu position is calculated. 
 * If it starts with a scale of 0, it's initial position is always from the pointer, direction bottom.
 * If the menu is opened at the end of the page it will overflow because it cannot calculate the overflowY.
*/

.react-contextmenu {
  background: var(--secondary-color-2);
  background-clip: padding-box;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 0.25rem;
  color: $text-main-color;
  font-size: 16px;
  margin: 2px 0 0;
  min-width: 160px;
  outline: none;
  /* padding: 5px 0; */
  pointer-events: none;
  text-align: center;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  transition: transform 2000ms !important;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  // animation: scale-up-tl 1s linear both;
}

@keyframes scale-up-tl {
  0% {
    transform: scale(0);
    transform-origin: 0% 0%;
  }
  100% {
    transform: scale(1);
    transform-origin: 0% 0%;
  }
}

.react-contextmenu span {
  display: inline-block;
  color: $text-hover-color;
  padding-bottom: 4px;
}

.react-contextmenu.react-contextmenu--visible {
  pointer-events: auto;
  z-index: 9999;
}

.react-contextmenu-item {
  background: 0 0;
  color: $text-main-color;
  cursor: pointer;
  font-weight: 400;
  line-height: 1.5;
  padding: 4px 10px;
  text-align: left;
  white-space: nowrap;
}

.react-contextmenu-item.react-contextmenu-item--active,
.react-contextmenu-item.react-contextmenu-item--selected,
.react-contextmenu-item:hover {
  color: $text-hover-color;
  background-color: var(--primary);
  border-color: var(--primary);
  text-decoration: none;
}

.react-contextmenu-item.react-contextmenu-item--disabled,
.react-contextmenu-item.react-contextmenu-item--disabled:hover {
  background-color: transparent;
  border-color: rgba(0, 0, 0, 0.15);
  color: $text-dark;
}

.react-contextmenu-item--divider {
  border-bottom: 1px solid rgba(0, 0, 0, 0.15);
  cursor: inherit;
  margin-bottom: 3px;
  padding: 2px 0;
}

.react-contextmenu-item--divider:hover {
  background-color: transparent;
  border-color: rgba(0, 0, 0, 0.15);
}

.react-contextmenu-item.react-contextmenu-submenu {
  padding: 0;
}

.react-contextmenu-item.react-contextmenu-submenu
  > .react-contextmenu-item::after {
  content: 'â–¶';
  display: inline-block;
  position: absolute;
  right: 7px;
}

.example-multiple-targets::after {
  content: attr(data-count);
  display: block;
}

/* Overwrites ANTD CSS */
.ant-btn-primary {
  background-color: var(--primary);
  border-color: var(--primary);
  border-width: 2px !important;
  border-right-width: 2px !important;
}

.ant-btn-ghost {
  border-width: 2px !important;
  border-right-width: 2px !important;
}

.ant-btn-ghost:hover,
.ant-btn-ghost:focus,
.ant-btn-ghost:active,
.ant-btn-ghost.active {
  color: var(--primary);
  border-color: var(--primary);
}

.ant-btn-primary:hover,
.ant-btn-primary:focus {
  background-color: var(--primary);
  border-color: var(--primary);
  filter: brightness(85%);
}

.ant-cascader-picker {
  background-color: var(--secondary-color-2);
}

.ant-cascader-picker-label:hover ~ .ant-input {
  border-color: var(--primary);
}

.ant-cascader-menus {
  background-color: var(--secondary-color-2);
}

.ant-cascader-menu-item:hover {
  background-color: var(--secondary-color-3);
}

.ant-cascader-menu-item-active:not(.ant-cascader-menu-item-disabled),
.ant-cascader-menu-item-active:not(.ant-cascader-menu-item-disabled):hover {
  background-color: var(--secondary-color-3);
}

.ant-btn-primary.disabled,
.ant-btn-primary[disabled],
.ant-btn-primary.disabled:hover,
.ant-btn-primary[disabled]:hover,
.ant-btn-primary.disabled:focus,
.ant-btn-primary[disabled]:focus,
.ant-btn-primary.disabled:active,
.ant-btn-primary[disabled]:active,
.ant-btn-primary.disabled.active,
.ant-btn-primary[disabled].active {
  background-color: var(--primary);
  color: white;
  filter: brightness(60%) grayscale(30%);
}

.ant-switch-checked,
.ant-checkbox-checked .ant-checkbox-inner,
.ant-checkbox-indeterminate .ant-checkbox-inner {
  background-color: var(--primary);
}

.ant-switch-loading-icon,
.ant-switch:after {
  background-color: #fff;
}
.ant-input,
.ant-input-group-addon {
  background-color: var(--secondary-color-2);
  border-color: var(--secondary-color-2);
  border-width: 2px !important;
  border-right-width: 2px !important;
}

.ant-input-affix-wrapper:hover .ant-input:not(.ant-input-disabled) {
  border-width: 2px !important;
  border-right-width: 2px !important;
}

.ant-input:focus,
.ant-cascader-picker:focus .ant-cascader-input {
  box-shadow: none;
}

.ant-input-group-addon:hover,
.ant-input-group-addon:focus,
.ant-input-group-addon:active {
  background-color: var(--secondary-color-1);
  cursor: pointer;
  svg {
    cursor: pointer;
    path {
      cursor: pointer;
    }
  }
}

.ant-input-affix-wrapper .ant-input-prefix :not(.anticon),
.ant-input-affix-wrapper .ant-input-suffix :not(.anticon),
.ant-select-arrow .ant-select-arrow-icon svg {
  cursor: pointer;
  path {
    cursor: pointer;
  }
}

.ant-input-affix-wrapper:hover .ant-input:not(.ant-input-disabled),
.ant-input:focus,
.ant-input:hover,
.ant-cascader-picker:focus .ant-cascader-input,
.ant-checkbox-checked .ant-checkbox-inner {
  border-color: var(--primary);
  border-width: 2px !important;
  border-right-width: 2px !important;
}

.ant-select-selection {
  border-color: var(--secondary-color-2);
  background-color: var(--secondary-color-2);
  border-width: 2px !important;
  border-right-width: 2px !important;
}

.ant-select-selection:hover,
.ant-select-focused .ant-select-selection,
.ant-select-selection:focus,
.ant-select-selection:active {
  box-shadow: none;
  border-color: var(--primary);
  border-width: 2px !important;
  border-right-width: 2px !important;
}

.ant-select-dropdown-menu-item-selected,
.ant-select-dropdown-menu-item-selected:hover {
  background-color: var(--secondary-color-3);
}

// Table

.ant-table-thead > tr > th {
  background: rgba(0, 0, 0, 0.15);
}

.ant-table-thead > tr.ant-table-row-hover > td,
.ant-table-tbody > tr.ant-table-row-hover > td,
.ant-table-thead > tr:hover > td,
.ant-table-tbody > tr:hover > td,
.ant-table-tbody > tr.ant-table-row-selected td {
  background: rgba(0, 0, 0, 0.15);
}

.ant-table-placeholder {
  background-color: var(--secondary-color-1);
}

.ant-radio-group-solid
  .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled),
.ant-radio-group-solid
  .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled):hover {
  background-color: var(--primary);
  border-color: var(--primary);
}

.ant-radio-button-wrapper,
.ant-radio-button-wrapper-focused,
.ant-radio-button-wrapper:hover,
.ant-radio-button-wrapper-focused {
  color: var(--primary);
}

.ant-popover-title {
  color: $text-dark;
}

.ant-select-dropdown,
.ant-select-dropdown-menu-item-active {
  background: var(--secondary-color-2);
}

.ant-select-dropdown-menu-item:hover {
  background: var(--secondary-color-3);
}

.sketch-picker {
  color: black;
  input {
    padding: 0 !important;
  }
}