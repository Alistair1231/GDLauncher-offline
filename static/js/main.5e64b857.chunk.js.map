{"version":3,"sources":["Common/Navbar/index.js","Homepage/index.js","Download/index.js","Explore/index.js","Blog/index.js","App.js","serviceWorker.js","index.js","assets/images/logo.png"],"names":["Navbar","_ref","location","_useState","Object","objectWithoutProperties","useState","_useState2","slicedToArray","topNav","setTopNav","useEffect","console","log","react_default","a","createElement","className","id","src","GDLogo","alt","style","height","Link","to","pathname","class","href","onClick","Homepage","props","fontWeight","fontSize","textAlign","fontStyle","color","paddingTop","es_button","type","width","Download","Explore","Blog","App","history","createBrowserHistory","Router","Route","component","display","justifyContent","Switch","exact","path","render","Boolean","window","hostname","match","ReactDOM","createRoot","document","getElementById","src_App","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"4RAgEeA,MA1Df,SAAAC,GAAwC,IAAtBC,EAAsBD,EAAtBC,SAAsBC,GAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,cACVK,mBAAS,WADCC,EAAAH,OAAAI,EAAA,EAAAJ,CAAAD,EAAA,GAC/BM,EAD+BF,EAAA,GACvBG,EADuBH,EAAA,GAetC,OAJAI,oBAAU,WACRC,QAAQC,QAIRC,EAAAC,EAAAC,cAAA,OAAKC,UAAWR,EAAQS,GAAG,YACzBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKG,IAAKC,IAAQC,IAAI,mBAAmBC,MAAO,CAAEC,OAAQ,MAD5D,cAIAT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAiC,MAAtBf,EAASwB,UAAoB,UACnDZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eADf,QAIAH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,GAAG,YACHR,UAAiC,cAAtBf,EAASwB,UAA4B,UAEhDZ,EAAAC,EAAAC,cAAA,KAAGW,MAAM,oBAJX,YAOAb,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,GAAG,WACHR,UAAiC,aAAtBf,EAASwB,UAA2B,UAE/CZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAJf,WAOAH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,GAAG,QACHR,UAAiC,UAAtBf,EAASwB,UAAwB,UAE5CZ,EAAAC,EAAAC,cAAA,KAAGW,MAAM,qBAJX,QAOAb,EAAAC,EAAAC,cAAA,KACEY,KAAK,sBACLX,UAAU,OACVY,QAAS,WA7CbnB,EADa,WAAXD,EACQ,oBAEA,YA6CNK,EAAAC,EAAAC,cAAA,KAAGW,MAAM,yCCRJG,MA7Cf,SAAkBC,GAChB,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OACEM,MAAO,CACLU,WAAY,IACZC,SAAU,GACVC,UAAW,SACXC,UAAW,OACXC,MAAO,YANX,cAWAtB,EAAAC,EAAAC,cAAA,OACEM,MAAO,CACLU,WAAY,IACZC,SAAU,GACVC,UAAW,SACXG,WAAY,KAGdvB,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAAEc,MAAO,YAAtB,4CAIFtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,YAAYH,MAAO,CAAEW,SAAU,GAAIG,MAAO,UACjDtB,EAAAC,EAAAC,cAAAsB,EAAA,GACEC,KAAK,UACLjB,MAAO,CACLkB,MAAO,IACPjB,OAAQ,KAGVT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAPf,cAUFH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,WAAWH,MAAO,CAAEW,SAAU,GAAIG,MAAO,UAChDtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADf,sBCWOwB,MAjDf,SAAkBV,GAChB,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OACEM,MAAO,CACLU,WAAY,IACZC,SAAU,GACVC,UAAW,SACXC,UAAW,OACXC,MAAO,YANX,YAWAtB,EAAAC,EAAAC,cAAA,OACEM,MAAO,CACLU,WAAY,IACZC,SAAU,GACVC,UAAW,SACXG,WAAY,KAGdvB,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAAEc,MAAO,YAAtB,wDAIFtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGY,KAAK,gGACNd,EAAAC,EAAAC,cAAAsB,EAAA,GAAQC,KAAK,WACXzB,EAAAC,EAAAC,cAAA,KAAGW,MAAM,mBADX,YAKFb,EAAAC,EAAAC,cAAA,KAAGY,KAAK,gGACNd,EAAAC,EAAAC,cAAAsB,EAAA,GAAQC,KAAK,WACXzB,EAAAC,EAAAC,cAAA,KAAGW,MAAM,iBADX,QAKFb,EAAAC,EAAAC,cAAA,KAAGY,KAAK,uGACNd,EAAAC,EAAAC,cAAAsB,EAAA,GAAQC,KAAK,WACXzB,EAAAC,EAAAC,cAAA,KAAGW,MAAM,iBADX,aC3CK,SAASe,EAAQX,GAC9B,OACEjB,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEc,MAAO,QAASF,UAAW,SAAUD,SAAU,KAA7D,gBCFW,SAASU,EAAKZ,GAC3B,OACEjB,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEc,MAAO,QAASF,UAAW,SAAUD,SAAU,KAA7D,uBC2BWW,MApBf,SAAab,GACX,IAAMc,EAAUC,MAEhB,OACEhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQF,QAASA,GACf/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOC,UAAWjD,IAClBc,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAE4B,QAAS,OAAQC,eAAgB,WAC7CrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOK,OAAK,EAACC,KAAK,IAAIL,UAAWnB,IACjChB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOK,OAAK,EAACC,KAAK,YAAYL,UAAWR,IACzC3B,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOK,OAAK,EAACC,KAAK,WAAWL,UAAWP,IACxC5B,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOK,OAAK,EAACC,KAAK,QAAQL,UAAWN,IACrC7B,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOO,OAAQ,kBAAMzC,EAAAC,EAAAC,cAAA,gCCZbwC,QACW,cAA7BC,OAAOvD,SAASwD,UAEe,UAA7BD,OAAOvD,SAASwD,UAEhBD,OAAOvD,SAASwD,SAASC,MACvB,2DCXNC,IAASC,WAAWC,SAASC,eAAe,SAASR,OAAOzC,EAAAC,EAAAC,cAACgD,EAAD,OD0HtD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.5e64b857.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GDLogo from \"../../assets/images/logo.png\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar({ location, ...props }) {\r\n  const [topNav, setTopNav] = useState(\"topnav\");\r\n\r\n  const navBarToggleHandler = () => {\r\n    if (topNav === \"topnav\") {\r\n      setTopNav(\"topnav responsive\");\r\n    } else {\r\n      setTopNav(\"topnav\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log();\r\n  });\r\n\r\n  return (\r\n    <div className={topNav} id=\"myTopnav\">\r\n      <div className=\"logoContainer\">\r\n        <img src={GDLogo} alt=\"GorillaDevs Logo\" style={{ height: 30 }} />\r\n        GDLAUNCHER\r\n      </div>\r\n      <div>\r\n        <Link to=\"/\" className={location.pathname === \"/\" && \"active\"}>\r\n          <i className=\"fa fa-home\" />\r\n          HOME\r\n        </Link>\r\n        <Link\r\n          to=\"/download\"\r\n          className={location.pathname === \"/download\" && \"active\"}\r\n        >\r\n          <i class=\"fas fa-download\" />\r\n          DOWNLOAD\r\n        </Link>\r\n        <Link\r\n          to=\"/explore\"\r\n          className={location.pathname === \"/explore\" && \"active\"}\r\n        >\r\n          <i className=\"fas fa-car-side\" />\r\n          EXPLORE\r\n        </Link>\r\n        <Link\r\n          to=\"/blog\"\r\n          className={location.pathname === \"/blog\" && \"active\"}\r\n        >\r\n          <i class=\"fas fa-newspaper\" />\r\n          BLOG\r\n        </Link>\r\n        <a\r\n          href=\"javascript:void(0);\"\r\n          className=\"icon\"\r\n          onClick={() => navBarToggleHandler(topNav, setTopNav)}\r\n        >\r\n          <i class=\"fa fa-bars\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Homepage.css\";\r\nimport { Button } from \"antd\";\r\n\r\nfunction Homepage(props) {\r\n  return (\r\n    <div className=\"homepage-header\">\r\n      <div\r\n        style={{\r\n          fontWeight: 900,\r\n          fontSize: 50,\r\n          textAlign: \"center\",\r\n          fontStyle: \"bold\",\r\n          color: \"#dfe6e9\"\r\n        }}\r\n      >\r\n        GDLauncher\r\n      </div>\r\n      <div\r\n        style={{\r\n          fontWeight: 500,\r\n          fontSize: 20,\r\n          textAlign: \"center\",\r\n          paddingTop: 20\r\n        }}\r\n      >\r\n        <span style={{ color: \"#dfe6e9\" }}>\r\n          A HANDCRAFTED MINECRAFT CUSTOM LAUNCHER\r\n        </span>\r\n      </div>\r\n      <div className=\"header-buttons\">\r\n        <Link to=\"/download\" style={{ fontSize: 19, color: \"white\" }}>\r\n          <Button\r\n            type=\"primary\"\r\n            style={{\r\n              width: 120,\r\n              height: 50\r\n            }}\r\n          >\r\n            <i className=\"fas fa-download\" /> Download\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/explore\" style={{ fontSize: 19, color: \"white\" }}>\r\n          <i className=\"fas fa-car-side\" /> Explore\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Homepage;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Download.css\";\r\nimport { Button } from \"antd\";\r\n\r\nfunction Download(props) {\r\n  return (\r\n    <div className=\"download-header\">\r\n      <div\r\n        style={{\r\n          fontWeight: 900,\r\n          fontSize: 35,\r\n          textAlign: \"center\",\r\n          fontStyle: \"bold\",\r\n          color: \"#dfe6e9\"\r\n        }}\r\n      >\r\n        Download\r\n      </div>\r\n      <div\r\n        style={{\r\n          fontWeight: 500,\r\n          fontSize: 17,\r\n          textAlign: \"center\",\r\n          paddingTop: 20\r\n        }}\r\n      >\r\n        <span style={{ color: \"#dfe6e9\" }}>\r\n          Choose the download for your operating system below\r\n        </span>\r\n      </div>\r\n      <div className=\"download-buttons\">\r\n        <a href=\"https://github.com/gorilla-devs/GDLauncher/releases/download/v0.9.0/GDLauncher-win-setup.exe\">\r\n          <Button type=\"primary\">\r\n            <i class=\"fab fa-windows\" />\r\n            Windows\r\n          </Button>\r\n        </a>\r\n        <a href=\"https://github.com/gorilla-devs/GDLauncher/releases/download/v0.9.0/GDLauncher-mac-setup.dmg\">\r\n          <Button type=\"primary\">\r\n            <i class=\"fab fa-apple\" />\r\n            Mac\r\n          </Button>\r\n        </a>\r\n        <a href=\"https://github.com/gorilla-devs/GDLauncher/releases/download/v0.9.0/GDLauncher-linux-setup.AppImage\">\r\n          <Button type=\"primary\">\r\n            <i class=\"fab fa-linux\" />\r\n            Linux\r\n          </Button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Download;\r\n","import React from \"react\";\r\n\r\nexport default function Explore(props) {\r\n  return (\r\n    <div style={{ color: \"white\", textAlign: \"center\", fontSize: 25 }}>Coming Soon!</div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Blog(props) {\r\n  return (\r\n    <div style={{ color: \"white\", textAlign: \"center\", fontSize: 25 }}>Coming Soon!</div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport createBrowserHistory from \"history/createBrowserHistory\";\r\nimport Navbar from \"./Common/Navbar\";\r\nimport Homepage from \"./Homepage\";\r\nimport Download from \"./Download\";\r\nimport Explore from './Explore';\r\nimport Blog from './Blog';\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App(props) {\r\n  const history = createBrowserHistory();\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <div className=\"App\">\r\n        <Route component={Navbar} />\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Homepage} />\r\n            <Route exact path=\"/download\" component={Download} />\r\n            <Route exact path=\"/explore\" component={Explore} />\r\n            <Route exact path=\"/blog\" component={Blog} />\r\n            <Route render={() => <div>Not found</div>} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(<App />);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.8f183497.png\";"],"sourceRoot":""}